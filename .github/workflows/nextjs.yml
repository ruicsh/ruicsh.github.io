name: Deploy Next.js site to Pages

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Checkout data
        uses: actions/checkout@main
        with:
          ref: data
          path: shared
          clean: false
      - name: Setup Node
        uses: actions/setup-node@main
        with:
          node-version: "20"
          cache: npm
      - name: Setup Pages
        uses: actions/configure-pages@main
        with:
          static_site_generator: next
      - name: Restore cache
        uses: actions/cache@main
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: |
          npm install --frozen-lockfile --no-audit --legacy-peer-deps
          npm install --frozen-lockfile --no-audit --legacy-peer-deps --force --os=linux --cpu=x64 sharp
      - name: Link shared dir
        run: npm run link-shared-dir
      - name: Run apps/bookmarks
        run: |
          npx playwright install-deps chrome
          npm --workspace @ruicsh/bookmarks run start
      - name: Run apps/books
        run: npm --workspace @ruicsh/books run start
        env:
          GOOGLE_BOOKS_API_KEY: ${{ secrets.GOOGLE_BOOKS_API_KEY }}
          BUNNY_API_KEY: ${{ secrets.BUNNY_API_KEY }}
          BUNNY_PULL_ZONE: ${{ secrets.BUNNY_PULL_ZONE }}
      - name: Build with Next.js
        run: |
          npm --workspace @ruicsh/render run normalize-db
          npm --workspace @ruicsh/render run static:data
          npm --workspace @ruicsh/render run build
        env:
          NEXT_PUBLIC_BUNNY_PULL_ZONE: ${{ secrets.BUNNY_PULL_ZONE }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@main
        with:
          path: ./apps/render/out

      - name: Check for modified files
        id: git-check
        run: |
          cd shared
          modified=$(if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi)
          echo "modified=$modified" >> "$GITHUB_OUTPUT"
      - name: Update changes in GitHub repository
        if: steps.git-check.outputs.modified == 'true'
        run: |
          cd shared
          git config --global user.name 'joibot' 
          git config --global user.email 'bot@tuplo.co.uk'
          git add -A
          git commit -m '[automated commit] update cmsdb data'
          git push

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main
